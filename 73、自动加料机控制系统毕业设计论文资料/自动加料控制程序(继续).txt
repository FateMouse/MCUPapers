#include <reg52.H>
#include <stdio.h>
#include <absacc.h>
code unsigned char table[10]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90}; //显示段码
unsigned char code run[4]={ 0xf3,0xf9,0xfc,0xf6}; //步进电机转动数组
unsigned char code SONG[] ={ //祝你平安
0x26,0x20,0x20,0x20,0x20,0x20,0x26,0x10,0x20,0x10,0x20,0x80,0x26,0x20,0x30,0x20,
0x30,0x20,0x39,0x10,0x30,0x10,0x30,0x80,0x26,0x20,0x20,0x20,0x20,0x20,0x1c,0x20,
0x20,0x80,0x2b,0x20,0x26,0x20,0x20,0x20,0x2b,0x10,0x26,0x10,0x2b,0x80,0x26,0x20,
0x30,0x20,0x30,0x20,0x39,0x10,0x26,0x10,0x26,0x60,0x40,0x10,0x39,0x10,0x26,0x20,
0x30,0x20,0x30,0x20,0x39,0x10,0x26,0x10,0x26,0x80,0x26,0x20,0x2b,0x10,0x2b,0x10,
0x2b,0x20,0x30,0x10,0x39,0x10,0x26,0x10,0x2b,0x10,0x2b,0x20,0x2b,0x40,0x40,0x20,
0x20,0x10,0x20,0x10,0x2b,0x10,0x26,0x30,0x30,0x80,0x18,0x20,0x18,0x20,0x26,0x20,
0x20,0x20,0x20,0x40,0x26,0x20,0x2b,0x20,0x30,0x20,0x30,0x20,0x1c,0x20,0x20,0x20,
0x20,0x80,0x1c,0x20,0x1c,0x20,0x1c,0x20,0x30,0x20,0x30,0x60,0x39,0x10,0x30,0x10,
0x20,0x20,0x2b,0x10,0x26,0x10,0x2b,0x10,0x26,0x10,0x26,0x10,0x2b,0x10,0x2b,0x80,
0x18,0x20,0x18,0x20,0x26,0x20,0x20,0x20,0x20,0x60,0x26,0x10,0x2b,0x20,0x30,0x20,
0x30,0x20,0x1c,0x20,0x20,0x20,0x20,0x80,0x26,0x20,0x30,0x10,0x30,0x10,0x30,0x20,
0x39,0x20,0x26,0x10,0x2b,0x10,0x2b,0x20,0x2b,0x40,0x40,0x10,0x40,0x10,0x20,0x10,
0x20,0x10,0x2b,0x10,0x26,0x30,0x30,0x80,0x00,
//路边的野华不要采
0x30,0x1C,0x10,0x20,0x40,0x1C,0x10,0x18,0x10,0x20,0x10,0x1C,0x10,0x18,0x40,0x1C,
0x20,0x20,0x20,0x1C,0x20,0x18,0x20,0x20,0x80,0xFF,0x20,0x30,0x1C,0x10,0x18,0x20,
0x15,0x20,0x1C,0x20,0x20,0x20,0x26,0x40,0x20,0x20,0x2B,0x20,0x26,0x20,0x20,0x20,
0x30,0x80,0xFF,0x20,0x20,0x1C,0x10,0x18,0x10,0x20,0x20,0x26,0x20,0x2B,0x20,0x30,
0x20,0x2B,0x40,0x20,0x20,0x1C,0x10,0x18,0x10,0x20,0x20,0x26,0x20,0x2B,0x20,0x30,
0x20,0x2B,0x40,0x20,0x30,0x1C,0x10,0x18,0x20,0x15,0x20,0x1C,0x20,0x20,0x20,0x26,
0x40,0x20,0x20,0x2B,0x20,0x26,0x20,0x20,0x20,0x30,0x80,0x20,0x30,0x1C,0x10,0x20,
0x10,0x1C,0x10,0x20,0x20,0x26,0x20,0x2B,0x20,0x30,0x20,0x2B,0x40,0x20,0x15,0x1F,
0x05,0x20,0x10,0x1C,0x10,0x20,0x20,0x26,0x20,0x2B,0x20,0x30,0x20,0x2B,0x40,0x20,
0x30,0x1C,0x10,0x18,0x20,0x15,0x20,0x1C,0x20,0x20,0x20,0x26,0x40,0x20,0x20,0x2B,
0x20,0x26,0x20,0x20,0x20,0x30,0x30,0x20,0x30,0x1C,0x10,0x18,0x40,0x1C,0x20,0x20,
0x20,0x26,0x40,0x13,0x60,0x18,0x20,0x15,0x40,0x13,0x40,0x18,0x80,0x00,};					 
unsigned char Count;
static signed int tcnt,sec,time0=0;   //定时时间
unsigned char number; //转速控制，数值越大电机转速越慢反之则快
unsigned char num;	 //步进电机的转速
bit write=0; //写24C08 的标志；
sbit signal=P3^4;//信号检测通道
sbit sda=P3^6; // 24c08 SDA
sbit scl=P3^7; // 24c08 SCL
sbit stsp=P1^4;   //启动/停止
sbit mlac=P1^5;   //手动/自动
sbit add=P1^3;    //加速按键
sbit dec=P1^2;    //减速按键
sbit time=P1^6;   //定时按键
sbit qebn=P1^7;	  //定量按键
sbit you=P1^1;   //加时/加量按键		   
sbit zuo=P1^0;	  //减时/减量按键
sbit _Speak=P3^5 ; //讯响器控制脚
//*******************步进电机驱动程序开始**********************//
void delay2(unsigned char i)//延时函数
  {	  unsigned char j,k;

      for(j=0;j<i;j++)
      for(k=0;k<100;k++);
  }
void speed() //四级调速程序调速
{
  if(!add)  //按键加速识别
  {
   delay2(200);
   if(!add)
    {
     number--;   
     }
	// while(!add);//等待
   }
 if(!dec) //按键减速速识别
  {
   delay2(200);
   if(!dec)
    {
     number++;
     }
	// while(!dec);//等待
   }
if(number==0) {number=4;}
if(number==5) {number=1;}
switch(number)
  {
	case 1: num=50;break;   //一级速度
	case 2: num=100;break;   //二级速度
    case 3: num=400;break;  //三级速度
	case 4: num=800;break;  //四级速度
   }
}
 void fdteqa()//定时  /  定量
{
if(!time)//定时按键判别
{  
  if(!zuo)  //按键加时识别																 
  {
   delay2(200);
   if(!zuo)
    {
     tcnt--;   
     }
	// while(!zuo); //等待
   }
 if(!you) //按键减时识别
  {
   delay2(200);
   if(!you)
    {
     tcnt++;
     }
	 //while(!you);//等待
   }
   if(tcnt==100 | tcnt<0) tcnt=99;
 }
 if(!qebn) //定量按键判别
 {
 if(!zuo)  //按键加量识别
  {
   delay2(200);
   if(!zuo)
    {
     sec=sec-50;   
     }
	// while(!zuo);//等待
   }
 if(!you) //按键减量识别
  {
   delay2(200);
   if(!you)
    {
     sec=sec+100;
     }
	//  while(!you);//等待
   }
   if(sec>9999 | sec<0) sec=5000;
 }
 }
//*************步进电机驱动程序结束****************//


//**************报警信号***************************//
void Time0_Int() interrupt 3
{ TH1 = 0xD8;
TL1 = 0xEF;                      
Count++; //长度加1
}
void Delay_xMs(unsigned int x) //1MS 延时子程序
{ unsigned int i,j;
for( i =0;i < x;i++ )
{for( j =0;j<3;j++ );}
}
void Play_Song(unsigned char i) //:歌曲播放子程序i 为播放哪一段曲目
{ unsigned char Temp1,Temp2;
unsigned int Addr;
Count = 0; //中断计数器清0
Addr = i * 217;
while(1)
{ Temp1 = SONG[Addr++];												 
if( Temp1 == 0xFF ) //休止符
{TR1 = 0; Delay_xMs(100); }
else if ( Temp1 == 0x00 ) //歌曲结束符
{return;}
else {Temp2 = SONG[Addr++];
TR1 = 1;
while(1)
{ _Speak = ~_Speak;
Delay_xMs(Temp1);
if ( Temp2 == Count )
{Count = 0;
break;
} } } } } //请注意写程序时的格式规范，此处是为了节省空间

//**************报警信号结束***********************//


//************24C08 读写驱动程序************************//          
void delay1(unsigned char x)
{ unsigned int i;
for(i=0;i<x;i++);
;}
void flash()
{ ; ; }
void x24c08_init() //24c08 初始化子程序
{scl=1; flash(); sda=1;flash();}
void start() //启动（I方C）总线
{sda=1; flash(); scl=1; flash(); sda=0; flash(); scl=0; flash();}
void stop() //停止（I方C）总线
{sda=0; flash(); scl=1; flash(); sda=1; flash();}
void writex(unsigned char j) //写一个字节
{ unsigned char i,temp;
temp=j;
for (i=0;i<8;i++)
{temp=temp<<1; scl=0; flash(); sda=CY; flash(); scl=1; flash();}
scl=0; flash(); sda=1; flash();
}
unsigned char readx() //读一个字节
{
unsigned char i,j,k=0;
scl=0; flash(); sda=1;
for (i=0;i<8;i++)
{
flash(); scl=1; flash();
if (sda==1) j=1;
else j=0;
k=(k<<1)|j;
scl=0;}
flash(); return(k);
}
void clock() //(I方C）线时钟
{
unsigned char i=0;
scl=1; flash();
while ((sda==1)&&(i<255))i++;
scl=0; flash();
}
//***************从24c02 的地址address 中读取一个字节数据**********//
unsigned char x24c08_read(unsigned char address)
{
unsigned char i;
start(); writex(0xa0);
clock(); writex(address);
clock(); start();
writex(0xa1); clock();	   //最低位为一表示为读
i=readx(); stop();
delay1(10);
return(i);
}
//********向24c02 的address地址中写入一字节数据info*************//
void x24c08_write(unsigned char address,unsigned char info)
{
EA=0;
start(); writex(0xa0);
clock(); writex(address);
clock(); writex(info);
clock(); stop();
EA=1;
delay1(50);
}
//***************24C08 读写驱动程序完*******************//
void Delay(unsigned int tc) //延时程序
{
while( tc != 0 )
{unsigned int i;
for(i=0; i<100; i++);
tc--;}
}
void LED() //LED显示函数
{
P2=0xff;
P2=P2&0x7f; P0=table[sec/1000]; Delay(4); P2=0xff;
P2=P2&0xbf; P0=table[sec%1000/100]; Delay(4); P2=0xff;
P2=P2&0xdf; P0=table[sec%1000%100/10]; Delay(4); P2=0xff;
P2=P2&0xef; P0=table[sec%1000%100%10]; Delay(4); P2=0xff;
P2=P2&0xf7; P0=table[tcnt/10]; Delay(4); P2=0xff;
P2=P2&0xfb; P0=table[tcnt%10]; Delay(4);
}
void t0(void) interrupt 1 using 0 //定时中断服务函数每250us中断一次
{
time0++;
if(time0==1200)
{
tcnt--;	
time0=0;
}
TH0=0x4c; //对TH0 TL0 赋值
TL0=0x00; //重装计数初值
write=1; //0.05秒写一次24C01
}

void main(void)
{
P0=P1=P2=P3=0xff;
_Speak=0;	// 报警信号
IP=0x02;//定时器0优先级别高
TMOD=0x11; //定时器工作在方式1
EA=1;ET0=1;ET1=0;
x24c08_init(); //初始化24C01
tcnt=x24c08_read(0);//读出保存的数据赋于tcnt
//sec=x24c08_read(1);//读出保存的数据赋于sec
TH0=0x4c;  //对TH0 TL0 赋值
TL0=0x00; //使定时器0.05 秒中断一次
TH1 = 0xD8;
TL1 = 0xEF; //12MZ晶振，10ms
TR0=1; //开始计时
while(1)
{
if(write==1) //判断计时器是否计时0.05秒
{
write=0; //清零
x24c08_write(0,tcnt); //在24c01 的地址中写入数据sec	
//x24c08_write(1,sec); //在24c01 的地址中写入数据sec	
}
if(stsp==0)//启动
 {
  unsigned char z; 
  for(z=0;z<4;z++)
   { 
      P3=run[z];
	  speed();  	//调速
      delay2(num);
	  LED();	  //显示函数
	  if(signal) {sec--;}//采集工件的数量
      if(sec==0)  {while(1){ET1=1;TR1=1;Play_Song(0);P2=0xff;}}//定量时间到停车
	  if(tcnt==0) {while(1){ET1=1;TR1=1;Play_Song(0);P2=0xff;}}//定时时间到停车
   }
 }
  
if(mlac==0)
 { 
  if(add==0) 
   { unsigned char z;
   	 for(z=0;z<4;z++)
      { 
      P3=run[z];
      delay2(100);
	  LED();	  //显示函数
	  if(signal) {sec--;}//采集工件的数量
      }
   }
 }

if(stsp==1)//定时/定量
 {
  fdteqa();
  LED();	  //显示函数 
 }
}
}